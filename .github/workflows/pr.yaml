name: Tests

on: pull_request

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version
        run: |
          # check if the commit includes changes to version in pyproject.toml
          DIFF=$(git diff origin/main -- pyproject.toml | grep "version")
          CUR_VER=$(echo "$DIFF" | grep -e "-version" | grep -oe "[0-9.]*")
          NEW_VER=$(echo "$DIFF" | grep -e "+version" | grep -oe "[0-9.]*")
          echo "Current version $CUR_VER, new version $NEW_VER"

          function semver_to_number {
            echo "$@" | awk -F. '{ printf("%d%03d%03d\n", $1, $2, $3); }';
          }
          if [ $(semver_to_number $CUR_VER) -ge $(semver_to_number $NEW_VER) ]; then
            echo -e "::error::Project version in \`pyproject.toml\` is the same as the \
              current released version; bump version before merging into main." && \
            echo "Use \`poetry version <type>\` and commit the change to this branch." && \
            exit 1
          fi

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: snok/install-poetry@v1.3.0

    - name: Install poetry dependencies
      run: poetry install

    - name: Build package
      run: poetry build

  lint-python:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: snok/install-poetry@v1.3.0

    - name: Install poetry dependencies
      run: poetry install

    - name: Lint Python
      run: |
        poetry run flake8 canonicalwebteam tests && \
        poetry run black --line-length 79 --check canonicalwebteam tests

  test-python:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: snok/install-poetry@v1.3.0

    - name: Install poetry dependencies
      run: poetry install

    - name: Test Python with Coverage
      run: |
        poetry run coverage run --source=. -m unittest discover tests
        poetry run coverage xml

    # - uses: codecov/codecov-action@v5
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}

  check-inclusive-naming:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check inclusive naming
        uses: canonical-web-and-design/inclusive-naming@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail-on-error: true

  check-type-hints:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: snok/install-poetry@v1.3.0

      - name: Install poetry dependencies
        run: poetry install

      - name: Check type hints
        run: poetry run mypy canonicalwebteam/flask_vite --follow-untyped-imports
